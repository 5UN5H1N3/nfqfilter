; номер очереди
queue = 0
; файл с доменами для блокировки
domainlist = /path/to/domains
; файл с url для блокировки
urllist = /path/to/urls
; файл с ssl доменами для блокировки
ssllist = /path/to/ssl_host
; файл с ip:port для блокировки
hostlist = contrib/hosts

; куда редиректить в случае наличия в списках
redirect_url = http://notify.example.com/?
; дополнительные порты для протоколов (nDPI)
protocols = contrib/protos
; время вывода статистики по использованию памяти, минут
statistic_interval = 10
; если установлено в true, то сам nfqfilter отправляет tcp rst клиенту и серверу (тогда mark_value не используется) в случае фильтрации https и ip:port
send_rst = true
; каким значением метить пакеты для iptables в случае наличия в списках ssl и hosts
mark_value = 17
; количество обрабатываемых пакетов (default: 1024)
; max_pending_packets = 1024
; сохранять пакеты ошибками в /tmp
; save_bad_packets = false
; блокировать ssl client hello по первому пакету
; block_undetected_ssl = false
[logging]
loggers.root.level = information
;loggers.root.level = debug
loggers.root.channel = fileChannel
channels.fileChannel.class = FileChannel
channels.fileChannel.path = /var/log/nfqfilter.log
channels.fileChannel.rotation = 1 M
channels.fileChannel.archive = timestamp
channels.fileChannel.formatter.class = PatternFormatter
channels.fileChannel.formatter.pattern = %Y-%m-%d %H:%M:%S.%i [%P] %p %s - %t
channels.fileChannel.formatter.times = local
